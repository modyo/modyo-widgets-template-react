name: Publish Commons in git Registry and deploy gh pages
on:
  release:
    types: [published]
jobs:
  install-packages:
    name: Install Npm Packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '18.x'
          registry-url: 'https://npm.pkg.github.com'
      - name: Cache Node_modules for parallels executions
        uses: actions/cache@v2
        env:
          cache-name: cache-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ./node_modules
          key: ${{ github.sha }}-node-modules
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install packages
        if: steps.npm-cache-set-path.outputs.cache-hit != 'true'
        run: npm install
        env:
          # And add the additional registry token here:
          # FORTAWESOME_TOKEN: ${{secrets.FORTAWESOME_TOKEN}}
          # NODE_AUTH_TOKEN: ${{ secrets.TOKEN_REG }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish-commons:
    name: Publish the commons package
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      deployments: write
    needs: install-packages
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '18.x'
          registry-url: 'https://npm.pkg.github.com'
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Restore node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ./node_modules
          key: ${{ github.sha }}-node-modules
      - name: Build Library
        run: npm run build:lib
      - name: Versioning
        run : |
            echo $GITHUB_REF
            TAG=$(echo $GITHUB_REF | cut -c 11-)
            echo $TAG
            git config user.email "support+actions@github.com"
            git config user.name "github-actions-bot"
            npm version $TAG --allow-same-version
      - name: Publish to GitHub Package Registry
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish-to-gh-pages:
    name: Publish to github pages
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      deployments: write
    needs: install-packages
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '18.x'
          registry-url: 'https://npm.pkg.github.com'
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Restore node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ./node_modules
          key: ${{ github.sha }}-node-modules
      - name: build Storybook
        run: |
          npm run build-storybook
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: push to gh-pages
        run: |
          git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          npm run deploy-storybook -- -u "github-actions-bot <support+actions@github.com>"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
